// <auto-generated />
using System;
using CreaNovelNETCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreaNovelNETCore.Migrations
{
    [DbContext(typeof(CreanovelDbContext))]
    [Migration("20210920054841_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreaNovelNETCore.Models.Escena", b =>
                {
                    b.Property<Guid>("EscenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identificador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NovelaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EscenaId");

                    b.HasIndex("NovelaId");

                    b.ToTable("Escenas");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Lectura", b =>
                {
                    b.Property<Guid>("LecturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NovelaRegistrosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioPropietarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LecturaId");

                    b.HasIndex("NovelaRegistrosId");

                    b.HasIndex("UsuarioPropietarioId");

                    b.ToTable("Lecturas");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.LecturaRecursos", b =>
                {
                    b.Property<Guid>("LecturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LecturaId", "RecursoId");

                    b.HasIndex("RecursoId");

                    b.ToTable("LecturaRecurso");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Novela", b =>
                {
                    b.Property<Guid>("NovelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioCreadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NovelaId");

                    b.HasIndex("UsuarioCreadorId");

                    b.ToTable("Novelas");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Recurso", b =>
                {
                    b.Property<Guid>("RecursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EscenaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tipo_recurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecursoId");

                    b.HasIndex("EscenaId");

                    b.ToTable("Recursos");

                    b.HasDiscriminator<string>("tipo_recurso").HasValue("recurso_base");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.RecursoDecisionOpcion", b =>
                {
                    b.Property<Guid>("RecursoDecisionOpcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RecursoDecisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SiguienteRecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecursoDecisionOpcionId");

                    b.HasIndex("RecursoDecisionId");

                    b.HasIndex("SiguienteRecursoId");

                    b.ToTable("RecursoDecisionOpciones");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.RecursoConversacion", b =>
                {
                    b.HasBaseType("CreaNovelNETCore.Models.Recurso");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SiguienteRecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SiguienteRecursoId");

                    b.HasDiscriminator().HasValue("recurso_conversacion");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.RecursoDecision", b =>
                {
                    b.HasBaseType("CreaNovelNETCore.Models.Recurso");

                    b.HasDiscriminator().HasValue("recurso_decision");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Escena", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Novela", "Novela")
                        .WithMany("Escenas")
                        .HasForeignKey("NovelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Lectura", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Novela", "NovelaRegistros")
                        .WithMany()
                        .HasForeignKey("NovelaRegistrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreaNovelNETCore.Models.Usuario", "UsuarioPropietario")
                        .WithMany("Lecturas")
                        .HasForeignKey("UsuarioPropietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.LecturaRecursos", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Lectura", "Lectura")
                        .WithMany("Recursos")
                        .HasForeignKey("LecturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreaNovelNETCore.Models.Recurso", "Recurso")
                        .WithMany("Lecturas")
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Novela", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Usuario", "UsuarioCreador")
                        .WithMany("NovelasCreadas")
                        .HasForeignKey("UsuarioCreadorId");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.Recurso", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Escena", "Escena")
                        .WithMany("Recursos")
                        .HasForeignKey("EscenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.RecursoDecisionOpcion", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.RecursoDecision", "RecursoDecision")
                        .WithMany("Opciones")
                        .HasForeignKey("RecursoDecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreaNovelNETCore.Models.Recurso", "SiguienteRecurso")
                        .WithMany()
                        .HasForeignKey("SiguienteRecursoId");
                });

            modelBuilder.Entity("CreaNovelNETCore.Models.RecursoConversacion", b =>
                {
                    b.HasOne("CreaNovelNETCore.Models.Recurso", "SiguienteRecurso")
                        .WithMany()
                        .HasForeignKey("SiguienteRecursoId");
                });
#pragma warning restore 612, 618
        }
    }
}
